// <auto-generated />
using System;
using Clay.AccessControl.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clay.AccessControl.Api.Data.Migrations
{
    [DbContext(typeof(AccessControlDbContext))]
    [Migration("20220208003358_InitDatatbase")]
    partial class InitDatatbase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Clay.AccessControl.Api.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessResult")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ActionedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("LockDescription")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("LockId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("LockToken")
                        .HasColumnType("TEXT");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TagToken")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Audits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 10, 10, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 1,
                            TagToken = new Guid("6f5f6b36-ace9-401e-8e97-5dea550e2b3d"),
                            UserId = 1,
                            UserName = "Darjan"
                        },
                        new
                        {
                            Id = 2,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 10, 20, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House Second Door (Office)",
                            LockId = 2,
                            LockToken = new Guid("d5bc20c6-4a33-4b18-aa89-589b1e3382df"),
                            TagId = 1,
                            TagToken = new Guid("6f5f6b36-ace9-401e-8e97-5dea550e2b3d"),
                            UserId = 1,
                            UserName = "Darjan"
                        },
                        new
                        {
                            Id = 3,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 15, 20, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 2,
                            TagToken = new Guid("935007b3-0c77-4ed4-be51-e51d11c944ee"),
                            UserId = 2,
                            UserName = "Medi"
                        },
                        new
                        {
                            Id = 4,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 15, 35, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House Second Door (Office)",
                            LockId = 2,
                            LockToken = new Guid("d5bc20c6-4a33-4b18-aa89-589b1e3382df"),
                            TagId = 2,
                            TagToken = new Guid("935007b3-0c77-4ed4-be51-e51d11c944ee"),
                            UserId = 2,
                            UserName = "Medi"
                        },
                        new
                        {
                            Id = 5,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 30, 20, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 3,
                            TagToken = new Guid("a85b118a-95bf-4a31-8e07-d873c37434dd"),
                            UserId = 3,
                            UserName = "Daniel"
                        },
                        new
                        {
                            Id = 6,
                            AccessResult = "NOT AUTHORIZED :: Tag not authorized",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 30, 30, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House Second Door (Office)",
                            LockId = 2,
                            LockToken = new Guid("d5bc20c6-4a33-4b18-aa89-589b1e3382df"),
                            TagId = 3,
                            TagToken = new Guid("a85b118a-95bf-4a31-8e07-d873c37434dd"),
                            UserId = 3,
                            UserName = "Daniel"
                        },
                        new
                        {
                            Id = 7,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 30, 33, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House Second Door (Office)",
                            LockId = 2,
                            LockToken = new Guid("d5bc20c6-4a33-4b18-aa89-589b1e3382df"),
                            TagId = 4,
                            TagToken = new Guid("5f43e5a1-13fc-4d28-9d60-35cde5c0bc8e"),
                            UserId = 3,
                            UserName = "Daniel"
                        },
                        new
                        {
                            Id = 8,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 45, 5, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 5,
                            TagToken = new Guid("207340c0-b073-4d16-a8c5-819a0117c9cb"),
                            UserId = 4,
                            UserName = "Peter"
                        },
                        new
                        {
                            Id = 9,
                            AccessResult = "NOT AUTHORIZED :: Tag not authorized",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 45, 10, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House Second Door (Office)",
                            LockId = 2,
                            LockToken = new Guid("d5bc20c6-4a33-4b18-aa89-589b1e3382df"),
                            TagId = 5,
                            TagToken = new Guid("207340c0-b073-4d16-a8c5-819a0117c9cb"),
                            UserId = 4,
                            UserName = "Peter"
                        },
                        new
                        {
                            Id = 10,
                            AccessResult = "NOT AUTHORIZED :: Tag is not active",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 50, 10, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 6,
                            TagToken = new Guid("f330243e-3314-4f41-9bd3-8577b2faf823"),
                            UserId = 5,
                            UserName = "Amin"
                        },
                        new
                        {
                            Id = 11,
                            AccessResult = "NOT AUTHORIZED :: Tag is not active",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 50, 12, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 6,
                            TagToken = new Guid("f330243e-3314-4f41-9bd3-8577b2faf823"),
                            UserId = 5,
                            UserName = "Amin"
                        },
                        new
                        {
                            Id = 12,
                            AccessResult = "NOT AUTHORIZED :: Tag is not active",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 50, 14, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 6,
                            TagToken = new Guid("f330243e-3314-4f41-9bd3-8577b2faf823"),
                            UserId = 5,
                            UserName = "Amin"
                        },
                        new
                        {
                            Id = 13,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 55, 40, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House First Door (Tunnel)",
                            LockId = 1,
                            LockToken = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa"),
                            TagId = 4,
                            TagToken = new Guid("5f43e5a1-13fc-4d28-9d60-35cde5c0bc8e"),
                            UserId = 3,
                            UserName = "Daniel"
                        },
                        new
                        {
                            Id = 14,
                            AccessResult = "Opened",
                            ActionedAt = new DateTime(2022, 1, 10, 8, 55, 45, 0, DateTimeKind.Unspecified),
                            ClientIp = "",
                            LockDescription = "The Brick House Second Door (Office)",
                            LockId = 2,
                            LockToken = new Guid("d5bc20c6-4a33-4b18-aa89-589b1e3382df"),
                            TagId = 4,
                            TagToken = new Guid("5f43e5a1-13fc-4d28-9d60-35cde5c0bc8e"),
                            UserId = 3,
                            UserName = "Daniel"
                        });
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.Lock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The Brick House First Door (Tunnel)",
                            Token = new Guid("7025cdba-4810-47d9-acdc-99f48766c0aa")
                        },
                        new
                        {
                            Id = 2,
                            Description = "The Brick House Second Door (Office)",
                            Token = new Guid("d5bc20c6-4a33-4b18-aa89-589b1e3382df")
                        });
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.LockTag", b =>
                {
                    b.Property<int>("LockId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("LockId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("LockTag");

                    b.HasData(
                        new
                        {
                            LockId = 1,
                            TagId = 1,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 789, DateTimeKind.Local).AddTicks(7575)
                        },
                        new
                        {
                            LockId = 2,
                            TagId = 1,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3326)
                        },
                        new
                        {
                            LockId = 1,
                            TagId = 2,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3359)
                        },
                        new
                        {
                            LockId = 2,
                            TagId = 2,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3363)
                        },
                        new
                        {
                            LockId = 1,
                            TagId = 3,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3365)
                        },
                        new
                        {
                            LockId = 1,
                            TagId = 4,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3452)
                        },
                        new
                        {
                            LockId = 2,
                            TagId = 4,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3455)
                        },
                        new
                        {
                            LockId = 1,
                            TagId = 5,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3457)
                        },
                        new
                        {
                            LockId = 1,
                            TagId = 6,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3463)
                        },
                        new
                        {
                            LockId = 2,
                            TagId = 6,
                            CreateDate = new DateTime(2022, 2, 8, 4, 3, 57, 794, DateTimeKind.Local).AddTicks(3465)
                        });
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            OwnerId = 1,
                            Token = new Guid("6f5f6b36-ace9-401e-8e97-5dea550e2b3d")
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            OwnerId = 2,
                            Token = new Guid("935007b3-0c77-4ed4-be51-e51d11c944ee")
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            OwnerId = 3,
                            Token = new Guid("a85b118a-95bf-4a31-8e07-d873c37434dd")
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            OwnerId = 3,
                            Token = new Guid("5f43e5a1-13fc-4d28-9d60-35cde5c0bc8e")
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            OwnerId = 4,
                            Token = new Guid("207340c0-b073-4d16-a8c5-819a0117c9cb")
                        },
                        new
                        {
                            Id = 6,
                            IsActive = false,
                            OwnerId = 5,
                            Token = new Guid("f330243e-3314-4f41-9bd3-8577b2faf823")
                        });
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Darjan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Daniel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Peter"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Amin"
                        });
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.LockTag", b =>
                {
                    b.HasOne("Clay.AccessControl.Api.Models.Lock", "Lock")
                        .WithMany("LockTags")
                        .HasForeignKey("LockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clay.AccessControl.Api.Models.Tag", "Tag")
                        .WithMany("LockTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lock");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.Tag", b =>
                {
                    b.HasOne("Clay.AccessControl.Api.Models.User", "Owner")
                        .WithMany("OwnedTags")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.Lock", b =>
                {
                    b.Navigation("LockTags");
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.Tag", b =>
                {
                    b.Navigation("LockTags");
                });

            modelBuilder.Entity("Clay.AccessControl.Api.Models.User", b =>
                {
                    b.Navigation("OwnedTags");
                });
#pragma warning restore 612, 618
        }
    }
}
